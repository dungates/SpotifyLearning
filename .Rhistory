library(tiktokr)
library(reticulate)
Sys.setenv(RETICULATE_PYTHON = "/Library/Frameworks/Python.framework/Versions/3.7/bin/python3.7")
use_condaenv("wayfinder_stage")
use_python(py_config()$python)
tk_install()
library(tiktokr)
library(reticulate)
Sys.setenv(RETICULATE_PYTHON = "/Users/dunk/opt/anaconda3/envs/my_conda/bin/python")
use_condaenv("wayfinder_stage")
use_python(py_config()$python)
tk_install()
Sys.setenv(RETICULATE_PYTHON = "/Users/dunk/opt/anaconda3/envs/my_conda/bin/python")
tk_install()
library(tiktokr)
library(reticulate)
Sys.setenv(RETICULATE_PYTHON = "/Users/dunk/opt/anaconda3/envs/my_conda/bin/python")
use_condaenv("wayfinder_stage")
use_python(py_config()$python)
library(tiktokr)
library(reticulate)
use_condaenv("wayfinder_stage")
use_python(py_config()$python)
Sys.setenv(RETICULATE_PYTHON = "/Users/dunk/opt/anaconda3/envs/my_conda/bin/python")
tk_install()
tk_auth(cookie = "tt_csrf_token=OcFLQRNpaAUPSuKZ4og6WFVl; s_v_web_id=verify_khw85bx3_6xAV3voR_wfAZ_4XTa_9Gmv_LY7qvF8W3AeC")
tk_init()
Sys.setenv(RETICULATE_PYTHON = "/Users/dunk/opt/anaconda3/envs/my_env/bin/python")
tk_install()
.rs.restartR()
library(tiktokr)
library(reticulate)
use_condaenv("wayfinder_stage")
use_python(py_config()$python)
Sys.setenv(RETICULATE_PYTHON = "/Users/dunk/opt/anaconda3/envs/my_env/bin/python")
tk_install()
tk_auth(cookie = "tt_csrf_token=OcFLQRNpaAUPSuKZ4og6WFVl; s_v_web_id=verify_khw85bx3_6xAV3voR_wfAZ_4XTa_9Gmv_LY7qvF8W3AeC")
tk_init()
trends <- tk_posts(scope = "trends", n = 200)
View(trends)
user_posts <- tk_posts(scope = "user", query = "willsmith", n = 50)
View(user_posts)
hash_post <- tk_posts(scope = "hashtag", query = "maincharacter", n = 100)
user_posts <- tk_posts(scope = "user", query = "willsmith", n = 50)
music_post <- tk_posts(scope = "music", query = user_posts$music_id[1], n = 100)
# fs::dir_create("video")
trends <- tk_posts(scope = "trends", n = 5)
trends %>%
split(1:nrow(.)) %>%
purrr::walk(~{tk_dwnl(.x$video_downloadAddr, paste0("video/", .x$id, ".mp4"))})
View(trends)
library(tidyverse)
?walk
library(tiktokr)
library(tidyverse)
library(reticulate)
use_condaenv("wayfinder_stage")
use_python(py_config()$python)
Sys.setenv(RETICULATE_PYTHON = "/Users/dunk/opt/anaconda3/envs/my_env/bin/python")
trends <- tk_posts(scope = "trends", n = 200)
trends <- tk_posts(scope = "trends", n = 200)
stats_tiktok <- tk_posts(scope = "hashtag", query = "rstats", n = 2000) # R stuff
hash_post <- tk_posts(scope = "hashtag", query = "maincharacter", n = 100) # Common tik tok meme
trends <- tk_posts(scope = "trends", n = 200)
py_config()$python
library(tiktokr)
library(tidyverse)
library(reticulate)
use_condaenv("wayfinder_stage")
Sys.setenv(RETICULATE_PYTHON = "/Users/dunk/opt/anaconda3/envs/my_env/bin/python")
use_python(py_config()$python)
tk_install("TikTik-Api")
?tk_install
?tk_install
tk_install()
tk_auth(cookie = "tt_csrf_token=OcFLQRNpaAUPSuKZ4og6WFVl; s_v_web_id=verify_khw85bx3_6xAV3voR_wfAZ_4XTa_9Gmv_LY7qvF8W3AeC")
tk_init()
tk_auth(cookie = "<tt_csrf_token=OcFLQRNpaAUPSuKZ4og6WFVl; s_v_web_id=verify_khw85bx3_6xAV3voR_wfAZ_4XTa_9Gmv_LY7qvF8W3AeC>")
tk_auth(cookie = "<tt_csrf_token=OcFLQRNpaAUPSuKZ4og6WFVl; s_v_web_id=verify_khw85bx3_6xAV3voR_wfAZ_4XTa_9Gmv_LY7qvF8W3AeC>")
tk_init()
trends <- tk_posts(scope = "trends", n = 200)
View(trends)
?reorder
trends %>% ggplot(aes(x = authorStats_heartCount, y = authorStats_followerCount)) + geom_point()
trends %>% ggplot(aes(x = authorStats_heartCount, y = authorStats_followerCount)) + geom_point() + scale_continuous_identity(labels = scales::comma)
trends %>% ggplot(aes(x = authorStats_heartCount, y = authorStats_followerCount)) + geom_point() + scale_y_continuous(labels = scales::comma)
trends %>% ggplot(aes(x = authorStats_heartCount, y = authorStats_followerCount)) + geom_point() + scale_y_continuous(labels = scales::comma) + scale_x_continuous(labels = scales::comma)
log(10)
safe_log(10)
safe_log <- safely(log)
safe_log
?safely
log(10)
safe_log(10)
log("a")
pbinom(3, 20, 0.05)
View(trends)
library(tidyverse)
library(readr)
read_csv("/Users/dunk/Classes/NMC 245/forbes_celebrity_100.csv")
celebs <- read_csv("/Users/dunk/Classes/NMC 245/forbes_celebrity_100.csv")
View(celebs)
tibble(Name = "Jason Derulo",
Category = "Musician")
d <- tibble(Name = "Jason Derulo",
Category = "Musician")
celebs <- bind_rows(celebs, d)
write_csv(celebs, "/Users/dunk/Classes/NMC 245/forbes_celebrity_100.csv")
unique(celebs$Category)
url <- "https://en.wikipedia.org/wiki/List_of_most-followed_Instagram_accounts#:~:text=Cristiano%20Ronaldo%20is%20the%20most,with%20over%20242%20million%20followers."
kept_columns <- c("Owner")
webpage <- read_html(url)
webpage <- xml::read_html(url)
??read_html
webpage <- xml2::read_html(url)
View(webpage)
tbls <- html_nodes(webpage, "table")
tbls <- xml2::html_nodes(webpage, "table")
??html_node
tbls <- rvest::html_nodes(webpage, "table")
View(tbls)
tbls
??html_table
View(trends)
trends %>% ggplot(aes(x = authorStats_heartCount, y = authorStats_followerCount)) + geom_text(aes(label = author_nickname)) + scale_y_continuous(labels = scales::comma) + scale_x_continuous(labels = scales::comma) # Plot of followers vs Likes
Instagram <- xml2::read_html("https://en.wikipedia.org/wiki/List_of_most-followed_Instagram_accounts")
Instagram <- Instagram %>%
#I used escape keying on the quotes
rvest::html_node(xpath = '//*[@id="mw-content-text"]/div[1]/table[1]')%>%
rvest::html_table()
View(Instagram)
YouTube <- xml2::read_html("https://en.wikipedia.org/wiki/List_of_most-followed_YouTube_accounts")
Twitter <- xml2::read_html("https://en.wikipedia.org/wiki/List_of_most-followed_Twitter_accounts")
Twitter <- Twitter %>%
#I used escape keying on the quotes
rvest::html_node(xpath = '//*[@id="mw-content-text"]/div[1]/table[1]')%>%
rvest::html_table()
View(Twitter)
YouTube <- xml2::read_html("https://en.wikipedia.org/wiki/List_of_most-subscribed_YouTube_channels")
YouTube <- YouTube %>%
#I used escape keying on the quotes
rvest::html_node(xpath = '//*[@id="mw-content-text"]/div[1]/table[1]')%>%
rvest::html_table()
YouTube <- YouTube %>%
#I used escape keying on the quotes
rvest::html_node(xpath = '//*[@id="mw-content-text"]/div[1]/table[1]')%>%
rvest::html_table(fill = T)
View(YouTube)
?znorm
?znorm
?pnorm
pnorm(-1.25, 75, 12)
dnorm(-1.25, 75, 12)
qnorm(-1.25, 75, 12)
rnorm(-1.25, 75, 12)
ggplot(data = data.frame(radius = 1)) + ggforce::geom_circle()
?ggforce"::geom_circle
?ggforce"::geom_circle
??geom_circle
circles <- data.frame(
x0 = rep(1:3, 3),
y0 = rep(1:3, each = 3),
r = seq(0.1, 1, length.out = 9)
)
# Behold the some circles
ggplot() +
geom_circle(aes(x0 = x0, y0 = y0, r = r, fill = r), data = circles)
circles <- data.frame(
x0 = rep(1:3, 3),
y0 = rep(1:3, each = 3),
r = seq(0.1, 1, length.out = 9)
)
# Behold the some circles
ggplot() +
ggforce::geom_circle(aes(x0 = x0, y0 = y0, r = r, fill = r), data = circles)
circles <- data.frame(
x0 = rep(-1,1),
y0 = rep(-1,1),
r = seq(1)
)
# Behold the some circles
ggplot() +
ggforce::geom_circle(aes(x0 = x0, y0 = y0, r = r, fill = r), data = circles)
circles <- data.frame(
x0 = rep(-1,1),
y0 = rep(-1,1),
r = seq(1)
)
# Behold the some circles
ggplot() +
ggforce::geom_circle(aes(x0 = x0, y0 = y0, r = r, fill = r/2), data = circles)
# Behold the some circles
ggplot() +
ggforce::geom_circle(aes(x0 = x0, y0 = y0, r = r, fill = r), data = circles, show.legend = F)
# Behold the some circles
ggplot() +
ggforce::geom_circle(aes(x0 = x0, y0 = y0, r = r, fill = r), data = circles, show.legend = F) + scale_color_identity() + scale_fill_identity()
# Define the circle; add a point at the center if the 'pie slice' if the shape is to be filled
circleFun <- function(center=c(0,0), diameter=1, npoints=100, start=0, end=2, filled=TRUE){
tt <- seq(start*pi, end*pi, length.out=npoints)
df <- data.frame(
x = center[1] + diameter / 2 * cos(tt),
y = center[2] + diameter / 2 * sin(tt)
)
if(filled==TRUE) { #add a point at the center so the whole 'pie slice' is filled
df <- rbind(df, center)
}
return(df)
}
#Define separate data frames for the filled and unfilled circle
quarterCircle <- circleFun(c(1,-1), diameter = 2.3, start=0., end=0.5, filled=TRUE)
fullCircle <- circleFun(c(1, -1), 2.3, start=0, end=2, filled=FALSE)
ggplot() +
geom_polygon(data=quarterCircle, aes(x,y), color="black", fill="black") +
geom_path(data=fullCircle, aes(x, y), color="black") +
coord_equal()
# Define the circle; add a point at the center if the 'pie slice' if the shape is to be filled
circleFun <- function(center=c(0,0), diameter=1, npoints=100, start=0, end=2, filled=TRUE){
tt <- seq(start*pi, end*pi, length.out=npoints)
df <- data.frame(
x = center[1] + diameter / 2 * cos(tt),
y = center[2] + diameter / 2 * sin(tt)
)
if(filled==TRUE) { #add a point at the center so the whole 'pie slice' is filled
df <- rbind(df, center)
}
return(df)
}
#Define separate data frames for the filled and unfilled circle
quarterCircle <- circleFun(c(1,-1), diameter = 2.3, start=0., end=1.0, filled=TRUE)
fullCircle <- circleFun(c(1, -1), 2.3, start=0, end=2, filled=FALSE)
ggplot() +
geom_polygon(data=quarterCircle, aes(x,y), color="black", fill="black") +
geom_path(data=fullCircle, aes(x, y), color="black") +
coord_equal()
ggplot() +
geom_polygon(data=quarterCircle, aes(x,y), color="black", fill="black") +
geom_path(data=fullCircle, aes(x, y), color="black") +
coord_equal() +
theme(axis.text = element_blank())
